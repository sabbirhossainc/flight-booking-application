{"ast":null,"code":"import rootReducer from \"../rootReducer\";\n\n// create our first middleware\nconst myLogger = store => next => action => {\n  console.log(`Action: ${JSON.stringify(action)}`);\n  console.log(`Before: ${JSON.stringify(store.getState())}`);\n  const upcomingState = [action].reduce(rootReducer, store.getState());\n  console.log(`Upcoming State: ${JSON.stringify(upcomingState.bookingReducer.data.length)}`);\n\n  // pass action\n  if (upcomingState.bookingReducer.data.length < 4) {} else {}\n  return next(action);\n};\nexport default myLogger;","map":{"version":3,"names":["rootReducer","myLogger","store","next","action","console","log","JSON","stringify","getState","upcomingState","reduce","bookingReducer","data","length"],"sources":["/home/shr/projects/think_in_a_redux_way/booking-app/src/redux/middlewares/myLogger.js"],"sourcesContent":["import rootReducer from \"../rootReducer\";\n\n// create our first middleware\nconst myLogger = (store) => (next) => (action) => {\n    console.log(`Action: ${JSON.stringify(action)}`);\n    console.log(`Before: ${JSON.stringify(store.getState())}`);\n\n    const upcomingState = [action].reduce(rootReducer, store.getState());\n    console.log(`Upcoming State: ${JSON.stringify(upcomingState.bookingReducer.data.length)}`);\n\n    // pass action\n    if (upcomingState.bookingReducer.data.length < 4) {\n        \n    } else {\n        \n    }\n    return next(action);\n};\n\nexport default myLogger;\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;;AAExC;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAMC,IAAI,IAAMC,MAAM,IAAK;EAC9CC,OAAO,CAACC,GAAG,CAAE,WAAUC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAE,EAAC,CAAC;EAChDC,OAAO,CAACC,GAAG,CAAE,WAAUC,IAAI,CAACC,SAAS,CAACN,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAE,EAAC,CAAC;EAE1D,MAAMC,aAAa,GAAG,CAACN,MAAM,CAAC,CAACO,MAAM,CAACX,WAAW,EAAEE,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAC;EACpEJ,OAAO,CAACC,GAAG,CAAE,mBAAkBC,IAAI,CAACC,SAAS,CAACE,aAAa,CAACE,cAAc,CAACC,IAAI,CAACC,MAAM,CAAE,EAAC,CAAC;;EAE1F;EACA,IAAIJ,aAAa,CAACE,cAAc,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE,CAElD,CAAC,MAAM,CAEP;EACA,OAAOX,IAAI,CAACC,MAAM,CAAC;AACvB,CAAC;AAED,eAAeH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}